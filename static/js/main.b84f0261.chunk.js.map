{"version":3,"sources":["fbase.js","components/Top/ResultTop.js","components/Top/TopRank.js","components/Top/TotalRank.js","components/Top/TopSubRank.js","components/Top/MainTop.js","routes/Top.js","components/Weekly/ResultWebtoon.js","components/Weekly/Genre.js","components/Weekly/WeeklyNav.js","components/Weekly/WeeklyToon.js","components/Weekly/WeekNav.js","components/Weekly/WeekToon.js","routes/Weekly.js","components/ResultEvent.js","routes/Event.js","components/ResultFinish.js","routes/Finish.js","components/Slider/EventSlider.js","components/Slider/BannerSlider.js","routes/Home.js","routes/MyPage.js","routes/Search.js","components/Navigation.js","routes/Auth.js","components/AuthForm.js","components/Search/ResultTitle.js","components/Search/ResultAuthor.js","components/Search/SearchWebtoon.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","ResultTop","userObj","id","rank","url","image","title","reader","category","author","weekday","history","useHistory","useState","favorite","setFavorite","onClickFav","a","collection","get","then","querySnapshot","res","forEach","doc","data","webtoonId","add","userId","uid","where","delete","className","href","src","icon","faUser","toFixed","onClick","Boolean","window","confirm","push","TopRank","webtoons","sort_webtoons","filter","element","sub_category","map","webtoon","series_id","thumb_img","read_count","sub_category_title","pubperiod","sub_rank","TotalRank","TopSubRank","sub_title","length","substr","MainTop","to","style","textDecoration","color","slice","width","size","TopPath","path","useParams","sortedWebtoons","finished","sort","b","TopRouter","exact","ResultWebtoon","WeeklyGenre","weeklyWebtoon","weeklyWebtoonCount","i","j","WeeklyNavigation","today","Date","getDay","useLocation","pathname","includes","WeeklyWebtoon","WeekNavigation","WeekWebtoon","weekWebtoon","weekWebtoonCount","WeeklyPath","WeekPath","day","WeeklyRouter","WeeklyNav","WeekNav","ResultEvent","Event","events","eventCount","event","ResultFinish","caption","Finish","finishCount","land_thumb_img","EventSlider","display_event","info","display","currentSlide","setCurrentSlide","slideRef","useRef","TOTAL_SLIDES","useEffect","current","transition","transform","ref","BannerSlider","main_copy2","sub_copy2","TodayWebtoon","Home","banner","FavWebtoon","MyPage","myWebtoon","setMyWebtoon","test","setTest","newArr","onCreate","key","concat","_delegate","photoURL","displayName","email","signOut","alert","Search","term","setTerm","onSubmit","preventDefault","type","value","placeholder","onChange","target","Navigation","isLoggedIn","Auth","setEmail","password","setPassword","error","setError","name","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","exit","onAuthStateChanged","user","required","faGoogle","faGithub","AuthForm","createUserWithEmailAndPassword","ResultTitle","ResultAuthor","SearchWebtoon","searchTitle","searchAuthor","searchTerm","replace","compare","AppRouter","useObj","App","init","setInit","setUserObj","setWebtoons","setBanner","setEvents","getWebtoons","getBanner","getEvents","axios","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b84f0261.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Top.css\"\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst ResultTop = ({ userObj, id, rank, url, image, title, reader, category, author, weekday }) => {\r\n    const history = useHistory();\r\n    const [favorite, setFavorite] = useState(false);\r\n\r\n    const onClickFav = async () => {\r\n        var res;\r\n        setFavorite(!favorite);\r\n        if (!favorite) {\r\n            await dbService.collection(\"webtoon\")\r\n            .get().then((querySnapshot) => {\r\n                res = false;\r\n                querySnapshot.forEach((doc) => {\r\n                    if(doc.data().webtoonId === id) {\r\n                        res = true;\r\n                    }\r\n                })\r\n                if(!res) {\r\n                    dbService.collection(\"webtoon\").add({\r\n                        userId: userObj.uid,\r\n                        webtoonId: id,\r\n                        url: url,\r\n                        image: image,\r\n                        title: title,\r\n                        reader: reader,\r\n                        category: category,\r\n                        author: author,\r\n                        weekday: weekday\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            dbService.collection('webtoon').where(\"webtoonId\", \"==\", id)\r\n            .get().then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    if(doc.data().userId === userObj.uid) {\r\n                        dbService.doc(`webtoon/${doc.id}`).delete();\r\n                    }\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    const onClick = () => {\r\n        const check = window.confirm(\"로그인 후 즐겨찾기를 설정하실 수 있습니다.\\n로그인 페이지로 이동하시겠습니까?\");\r\n        if (check) {\r\n            history.push(\"/auth\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"rank\">{rank}위</div>\r\n        <div className=\"top_sub_container\">\r\n            <a className=\"top_info\" href={url}>\r\n                <img className=\"top_image\" src={image} />\r\n                <div className=\"top_info_main\">\r\n                    <h2 className=\"top_info_title\">{title}</h2>\r\n                    <div className=\"top_info_sub\">\r\n                        <FontAwesomeIcon className=\"user_icon\" icon={faUser} />\r\n                        {`${((reader) / 10000).toFixed(1)}만명 | ${category} | ${author}`}\r\n                    </div>\r\n                    <div className=\"top_info_sub\">\r\n                        {`연재 요일 / ${weekday}`}\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            <div className=\"favorites\" onClick={Boolean(userObj) ? onClickFav : onClick}>\r\n                {favorite ? <div>💛</div> : <div>🤍</div>}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultTop;","import React from \"react\";\r\nimport ResultTop from \"./ResultTop\";\r\nimport \"components/css/Top.css\"\r\n\r\nconst TopRank = ({ userObj, webtoons, category }) => {\r\n    const sort_webtoons = webtoons.filter((element) => element.sub_category === category);\r\n\r\n    return (\r\n        <div className=\"top_main_container\">\r\n            {sort_webtoons.map((webtoon) => (\r\n                <ResultTop\r\n                    key={webtoon.series_id}\r\n                    userObj={userObj}\r\n                    id={webtoon.series_id}\r\n                    url={webtoon.url}\r\n                    image={webtoon.thumb_img}\r\n                    title={webtoon.title}\r\n                    reader={webtoon.read_count}\r\n                    category={webtoon.sub_category_title}\r\n                    author={webtoon.author}\r\n                    weekday={webtoon.pubperiod}\r\n                    rank={webtoon.sub_rank}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopRank;","import React from \"react\";\r\nimport ResultTop from \"./ResultTop\";\r\nimport \"components/css/Top.css\"\r\n\r\nconst TotalRank = ({ userObj, webtoons }) => {\r\n\r\n    return (\r\n        <div className=\"top_main_container\">\r\n            {webtoons.map((webtoon) => (\r\n                <ResultTop\r\n                    key={webtoon.series_id}\r\n                    userObj={userObj}\r\n                    id={webtoon.series_id}\r\n                    url={webtoon.url}\r\n                    image={webtoon.thumb_img}\r\n                    title={webtoon.title}\r\n                    reader={webtoon.read_count}\r\n                    category={webtoon.sub_category_title}\r\n                    author={webtoon.author}\r\n                    weekday={webtoon.pubperiod}\r\n                    rank={webtoon.rank}\r\n                    \r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalRank;","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Top.css\";\r\nconst TopSubRank = ({ url, image, title, reader }) => {\r\n\r\n    let sub_title;\r\n\r\n    if (title.length > 8) {\r\n        sub_title = title.substr(0, 7) + \"...\";\r\n    } else {\r\n        sub_title = title\r\n    }\r\n\r\n    const Reader = () => {\r\n        if (reader === 0) {\r\n            return (null)\r\n        } else {\r\n            return (\r\n                <h5 className=\"subRank_info_reader\">\r\n                    <FontAwesomeIcon className=\"user_icon\" icon={faUser} />{`${((reader) / 10000).toFixed(1)}만명`}\r\n                </h5>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a className=\"subRank_info\" href={url}>\r\n                <div className=\"subRank_info_container\">\r\n                <img className=\"subRank_image\" src={image} />\r\n                <div className=\"subRank_info_main\">\r\n                    <h4 className=\"subRank_info_title\">\r\n                        {sub_title}\r\n                    </h4>\r\n                    {Reader()}\r\n                </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopSubRank;","import TopSubRank from \"components/Top/TopSubRank\";\r\nimport React from \"react\";\r\nimport { Link, HashRouter as Router, Route, Switch, useParams } from \"react-router-dom\";\r\nimport \"components/css/Top.css\";\r\n\r\nconst MainTop = ({ webtoons }) => {\r\n  return (\r\n    <div className=\"top_main_container\">\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">전체 TOP 5</h2>\r\n          <Link to=\"/top/subCategory=1000\" style={{ textDecoration: \"none\", color: \"#777676\" }}>\r\n            <h3 className=\"top_more\">더보기</h3>\r\n          </Link>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons.slice(0, 5).map((webtoon) => (\r\n            <TopSubRank\r\n              key={webtoon.series_id}\r\n              url={webtoon.url}\r\n              image={webtoon.image}\r\n              title={webtoon.title}\r\n              reader={webtoon.read_count}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">소년 TOP 5</h2>\r\n          <Link to=\"/top/subCategory=115\" style={{ textDecoration: \"none\", color: \"#777676\" }}>\r\n            <h3 className=\"top_more\">더보기</h3>\r\n          </Link>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons\r\n            .filter((element) => element.sub_category === 115).slice(0, 5)\r\n            .map((webtoon) => (\r\n              <TopSubRank\r\n                key={webtoon.series_id}\r\n                url={webtoon.url}\r\n                image={webtoon.image}\r\n                title={webtoon.title}\r\n                reader={webtoon.read_count}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">드라마 TOP 5</h2>\r\n          <h3 className=\"top_more\">\r\n            <Link to=\"/top/subCategory=116\" style={{ textDecoration: \"none\", color: \"#777676\" }}>더보기</Link>\r\n          </h3>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons\r\n            .filter((element) => element.sub_category === 116).slice(0, 5)\r\n            .map((webtoon) => (\r\n              <TopSubRank\r\n                key={webtoon.series_id}\r\n                url={webtoon.url}\r\n                image={webtoon.image}\r\n                title={webtoon.title}\r\n                reader={webtoon.read_count}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">로맨스 TOP 5</h2>\r\n          <h3 className=\"top_more\">\r\n            <Link to=\"/top/subCategory=121\" style={{ textDecoration: \"none\", color: \"#777676\" }}>더보기</Link>\r\n          </h3>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons\r\n            .filter((element) => element.sub_category === 121).slice(0, 5)\r\n            .map((webtoon) => (\r\n              <TopSubRank\r\n                key={webtoon.series_id}\r\n                url={webtoon.url}\r\n                image={webtoon.image}\r\n                title={webtoon.title}\r\n                reader={webtoon.read_count}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">로판 TOP 5</h2>\r\n          <h3 className=\"top_more\">\r\n            <Link to=\"/top/subCategory=69\" style={{ textDecoration: \"none\", color: \"#777676\" }}>더보기</Link>\r\n          </h3>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons\r\n            .filter((element) => element.sub_category === 69).slice(0, 5)\r\n            .map((webtoon) => (\r\n              <TopSubRank\r\n                key={webtoon.series_id}\r\n                url={webtoon.url}\r\n                image={webtoon.image}\r\n                title={webtoon.title}\r\n                reader={webtoon.read_count}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n      <div className=\"top_preview\">\r\n        <div className=\"top_preview_form\">\r\n          <h2 className=\"top_title\">액션무협 Top 5</h2>\r\n          <h3 className=\"top_more\">\r\n            <Link to=\"/top/subCategory=112\" style={{ textDecoration: \"none\", color: \"#777676\" }}>더보기</Link>\r\n          </h3>\r\n        </div>\r\n        <div className=\"top_container\">\r\n          {webtoons\r\n            .filter((element) => element.sub_category === 112).slice(0, 5)\r\n            .map((webtoon) => (\r\n              <TopSubRank\r\n                key={webtoon.series_id}\r\n                url={webtoon.url}\r\n                image={webtoon.image}\r\n                title={webtoon.title}\r\n                reader={webtoon.read_count}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainTop;","import TopRank from \"components/Top/TopRank\";\r\nimport TotalRank from \"components/Top/TotalRank\";\r\nimport React from \"react\";\r\nimport MainTop from \"components/Top/MainTop\";\r\nimport { HashRouter as Router, Route, Switch, useParams } from \"react-router-dom\";\r\n\r\nconst TopRouter = ({ userObj, webtoons }) => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/top\">\r\n                    <MainTop webtoons={webtoons} />\r\n                </Route>\r\n                <Route exact path=\"/top/:path\">\r\n                    <TopPath userObj = {userObj} webtoons={webtoons} />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst TopPath = ({ userObj, webtoons }) => {\r\n    const { path } = useParams();\r\n\r\n    const sortedWebtoons=webtoons.filter((element) =>\r\n        element.finished === 0).sort((a, b) => a.rank - b.rank);\r\n    \r\n    switch (path) {\r\n        case \"subCategory=1000\": { return (<TotalRank userObj = {userObj} webtoons={sortedWebtoons} />) }\r\n        case \"subCategory=115\": { return (<TopRank userObj = {userObj} webtoons={sortedWebtoons} category={115} />) }\r\n        case \"subCategory=116\": { return (<TopRank userObj = {userObj} webtoons={sortedWebtoons} category={116} />) }\r\n        case \"subCategory=121\": { return (<TopRank userObj = {userObj} webtoons={sortedWebtoons} category={121} />) }\r\n        case \"subCategory=69\": { return (<TopRank userObj = {userObj} webtoons={sortedWebtoons} category={69} />) }\r\n        case \"subCategory=112\": { return (<TopRank userObj = {userObj} webtoons={sortedWebtoons} category={112} />) }\r\n    }\r\n}\r\n\r\nexport default TopRouter;","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Weekly.css\";\r\n\r\nconst ResultWebtoon = ({ url, image, title, reader }) => {\r\n    let sub_title;\r\n\r\n    if (title.length > 8) {\r\n        sub_title = title.substr(0, 7) + \"...\";\r\n    } else {\r\n        sub_title = title\r\n    }\r\n\r\n    const Reader = () => {\r\n        if (reader === 0) {\r\n            return (null)\r\n        } else {\r\n            return (\r\n                <h5 className=\"weekly_info_reader\">\r\n                    <FontAwesomeIcon className=\"user_icon\" icon={faUser} />{`${((reader) / 10000).toFixed(1)}만명`}\r\n                </h5>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a className=\"weekly_info\" href={url}>\r\n                <div>\r\n                    <img className=\"weekly_image\" src={image} />\r\n                    <div className=\"weekly_info_main\">\r\n                        <h4 className=\"weekly_info_title\">\r\n                            {sub_title}\r\n                        </h4>\r\n                        {Reader()}\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultWebtoon;","import React from \"react\";\r\nimport \"components/css/Weekly.css\";\r\nimport ResultWebtoon from \"./ResultWebtoon\";\r\n\r\nconst WeeklyGenre = ({ webtoons, category }) => {\r\n    let weeklyWebtoon = webtoons\r\n        .filter((webtoon) => (webtoon.finished === 0))\r\n        .filter((element) => element.sub_category === category);\r\n    const weeklyWebtoonCount = weeklyWebtoon.length;\r\n\r\n    for (let i = 1; i < 5; i++) {\r\n        if (weeklyWebtoonCount % 5 === i) {\r\n            for (let j = i; j < 5; j++) {\r\n                weeklyWebtoon.push({\r\n                    \"series_id\": j,\r\n                    \"title\": \"\",\r\n                    \"image\": \"\",\r\n                    \"read_count\": 0,\r\n                    \"url\": \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"weekly_main_container\">\r\n            <h2 className=\"weekly_count\">\r\n                {`전체 (${weeklyWebtoonCount})`}\r\n            </h2>\r\n            <div className=\"weekly_container\">\r\n                {weeklyWebtoon\r\n                    .map((webtoon) => (\r\n                        <ResultWebtoon\r\n                            key={webtoon.series_id}\r\n                            url={webtoon.url}\r\n                            image={webtoon.image}\r\n                            title={webtoon.title}\r\n                            reader={webtoon.read_count}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeeklyGenre;","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"components/css/Navigation.css\";\r\n\r\nconst WeeklyNavigation = () => {\r\n    const todayNum = new Date().getDay();\r\n    let today;\r\n    switch (todayNum) {\r\n        case (0): { today = \"sun\"; break; }\r\n        case (1): { today = \"mon\"; break; }\r\n        case (2): { today = \"tue\"; break; }\r\n        case (3): { today = \"wed\"; break; }\r\n        case (4): { today = \"thu\"; break; }\r\n        case (5): { today = \"fri\"; break; }\r\n        case (6): { today = \"sat\"; break; }\r\n\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <ul className=\"weekly_nav\">\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly\") ? \"black\" : \"rgb(189, 189, 189)\" }}>홈</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to={`/weekly/week/${today}`}\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"/weekly/week\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>요일별</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly/subCategory=115\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly/subCategory=115\") ? \"black\" : \"rgb(189, 189, 189)\" }}>소년</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly/subCategory=116\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly/subCategory=116\") ? \"black\" : \"rgb(189, 189, 189)\" }}>드라마</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly/subCategory=121\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly/subCategory=121\") ? \"black\" : \"rgb(189, 189, 189)\" }}>로맨스</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly/subCategory=69\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly/subCategory=69\") ? \"black\" : \"rgb(189, 189, 189)\" }}>로판</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/weekly/subCategory=112\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname === \"/weekly/subCategory=112\") ? \"black\" : \"rgb(189, 189, 189)\" }}>액션무협</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default WeeklyNavigation;","import React from \"react\";\r\nimport \"components/css/Weekly.css\";\r\nimport ResultWebtoon from \"./ResultWebtoon\";\r\n\r\nconst WeeklyWebtoon = ({ webtoons }) => {\r\n    let weeklyWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0));\r\n    const weeklyWebtoonCount = weeklyWebtoon.length;\r\n\r\n    for (let i = 1; i < 5; i++) {\r\n        if (weeklyWebtoonCount % 5 === i) {\r\n            for (let j = i; j < 5; j++) {\r\n                weeklyWebtoon.push({\r\n                    \"series_id\": j,\r\n                    \"title\": \"\",\r\n                    \"image\": \"\",\r\n                    \"read_count\": 0,\r\n                    \"url\": \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"weekly_main_container\">\r\n            <h2 className=\"weekly_count\">\r\n                {`전체 (${weeklyWebtoonCount})`}\r\n            </h2>\r\n            <div className=\"weekly_container\">\r\n                {weeklyWebtoon\r\n                    .map((webtoon) => (\r\n                        <ResultWebtoon\r\n                            key={webtoon.series_id}\r\n                            url={webtoon.url}\r\n                            image={webtoon.image}\r\n                            title={webtoon.title}\r\n                            reader={webtoon.read_count}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WeeklyWebtoon;","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"components/css/Navigation.css\";\r\n\r\nconst WeekNavigation = () => {\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <ul className=\"weekly_nav week_nav\">\r\n                    <li className={(useLocation().pathname.includes(\"mon\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/mon\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"mon\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>월</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"tue\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/tue\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"tue\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>화</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"wed\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/wed\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"wed\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>수</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"thu\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/thu\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"thu\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>목</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"fri\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/fri\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"fri\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>금</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"sat\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/sat\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"sat\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>토</Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"sun\")) ? \"w_nav act\" : \"w_nav\"}>\r\n                        <Link\r\n                            to=\"/weekly/week/sun\"\r\n                            style={{ textDecoration: \"none\", color: (useLocation().pathname.includes(\"sun\")) ? \"black\" : \"rgb(189, 189, 189)\" }}>일</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default WeekNavigation;","import React from \"react\";\r\nimport \"components/css/Weekly.css\";\r\nimport ResultWebtoon from \"./ResultWebtoon\";\r\n\r\nconst WeekWebtoon = ({ webtoons, path }) => {\r\n    let weekday;\r\n\r\n    switch (path) {\r\n        case \"mon\": { weekday = \"월\"; break; }\r\n        case \"tue\": { weekday = \"화\"; break; }\r\n        case \"wed\": { weekday = \"수\"; break; }\r\n        case \"thu\": { weekday = \"목\"; break; }\r\n        case \"fri\": { weekday = \"금\"; break; }\r\n        case \"sat\": { weekday = \"토\"; break; }\r\n        case \"sun\": { weekday = \"일\"; break; }\r\n    }\r\n\r\n    let weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n        .filter((element) => element.pubperiod === weekday)\r\n    const weekWebtoonCount = weekWebtoon.length;\r\n\r\n    for (let i = 1; i < 5; i++) {\r\n        if (weekWebtoonCount % 5 === i) {\r\n            for (let j = i; j < 5; j++) {\r\n                weekWebtoon.push({\r\n                    \"series_id\": j,\r\n                    \"title\": \"\",\r\n                    \"image\": \"\",\r\n                    \"read_count\": 0,\r\n                    \"url\": \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"weekly_main_container\">\r\n            <h2 className=\"weekly_count\">\r\n                {`전체 (${weekWebtoonCount})`}\r\n            </h2>\r\n            <div className=\"weekly_container\">\r\n                {weekWebtoon\r\n                    .map((webtoon) => (\r\n                        <ResultWebtoon\r\n                            key={webtoon.series_id}\r\n                            url={webtoon.url}\r\n                            image={webtoon.image}\r\n                            title={webtoon.title}\r\n                            reader={webtoon.read_count}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekWebtoon;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, useParams } from \"react-router-dom\";\r\nimport WebtoonGenre from \"components/Weekly/Genre\";\r\nimport WeeklyNavigation from \"components/Weekly/WeeklyNav\";\r\nimport WeeklyWebtoon from \"components/Weekly/WeeklyToon\";\r\nimport WeekNavigation from \"components/Weekly/WeekNav\";\r\nimport WeekWebtoon from \"components/Weekly/WeekToon\";\r\n\r\nconst WeeklyRouter = ({ webtoons }) => (\r\n    <Router>\r\n        <Switch>\r\n            <Route exact path=\"/weekly\">\r\n                <WeeklyNavigation />\r\n                <WeeklyWebtoon webtoons={webtoons} />\r\n            </Route>\r\n            <Route exact path=\"/weekly/week/:day\">\r\n                <WeeklyNavigation />\r\n                <WeekNavigation />\r\n                <WeekPath webtoons={webtoons} />\r\n            </Route>\r\n            <Route exact path=\"/weekly/:category\">\r\n                <WeeklyNavigation />\r\n                <WeeklyPath webtoons={webtoons} />\r\n            </Route>\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nconst WeeklyPath = ({ webtoons }) => {\r\n    const { category } = useParams();\r\n\r\n    switch (category) {\r\n        case \"subCategory=115\": { return (<WebtoonGenre webtoons={webtoons} category={115} />) }\r\n        case \"subCategory=116\": { return (<WebtoonGenre webtoons={webtoons} category={116} />) }\r\n        case \"subCategory=121\": { return (<WebtoonGenre webtoons={webtoons} category={121} />) }\r\n        case \"subCategory=69\": { return (<WebtoonGenre webtoons={webtoons} category={69} />) }\r\n        case \"subCategory=112\": { return (<WebtoonGenre webtoons={webtoons} category={112} />) }\r\n    }\r\n};\r\n\r\nconst WeekPath = ({ webtoons }) => {\r\n    const { day } = useParams();\r\n    \r\n    switch (day) {\r\n        case \"mon\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"tue\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"wed\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"thu\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"fri\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"sat\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n        case \"sun\": { return (<WeekWebtoon webtoons={webtoons} path={day} />); }\r\n    }\r\n};\r\n\r\nexport default WeeklyRouter;","import React from \"react\";\r\nimport \"components/css/Event.css\"\r\n\r\nconst ResultEvent = ({image}) => {\r\n    return (\r\n        <img className=\"event_image\" src={image}/>\r\n    )\r\n}\r\n\r\nexport default ResultEvent;","import React from \"react\";\r\nimport \"components/css/Event.css\";\r\nimport ResultEvent from \"components/ResultEvent\";\r\n\r\nconst Event = ({ events }) => {\r\n    const eventCount = events.length;\r\n\r\n    return (\r\n        <div className=\"event_container\">\r\n            <h2 className=\"event_count\">\r\n                {`추천 이벤트 (${eventCount})`}\r\n            </h2>\r\n            <div className=\"event_images\">\r\n                {events.map((event) =>(\r\n                    <div className = \"\">\r\n                        <ResultEvent\r\n                            key={event.uid}\r\n                            image={event.image}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Event;","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Finish.css\";\r\n\r\nconst ResultFinish = ({ url, image, caption, title, reader, category, author }) => {\r\n    return (\r\n        <a className=\"finish_info_container\" href={url}>\r\n            <img className=\"finish_image\" src={image} />\r\n            <div className=\"finish_info_main\">\r\n                <h3 className=\"finish_info_title\">\r\n                    {title}\r\n                </h3>\r\n                <h3 className=\"finish_info_caption\">\r\n                    {caption}\r\n                </h3>\r\n                <div className=\"finish_info_sub\">\r\n                    <FontAwesomeIcon className=\"user_icon\" icon={faUser} /> {`${((reader) / 10000).toFixed(1)}만명 | ${category} | ${author}`}\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ResultFinish;","import React from \"react\";\r\nimport \"components/css/Finish.css\"\r\nimport ResultFinish from \"components/ResultFinish\";\r\n\r\nconst Finish = ({ webtoons }) => {\r\n    const webtoon = webtoons.filter((element) => element.finished === 1)\r\n    let finishCount = webtoon.length;\r\n\r\n    return (\r\n        <div className=\"finish_container\">\r\n            <h2>\r\n                {`완결작 전체  (${finishCount}작품)`}\r\n            </h2>\r\n            <div>\r\n                {webtoon.map((webtoon) => (\r\n                    <ResultFinish\r\n                        key={webtoon.series_id}\r\n                        url={webtoon.url}\r\n                        image={webtoon.land_thumb_img}\r\n                        caption={webtoon.caption}\r\n                        title={webtoon.title}\r\n                        reader={webtoon.read_count}\r\n                        category={webtoon.sub_category_title}\r\n                        author={webtoon.author}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Finish;","import React, { useEffect, useRef, useState } from 'react';\r\nimport \"components/css/Slider.css\";\r\n\r\n// 전체 슬라이드 개수 (총3개. 배열로 계산)\r\n\r\nexport default function EventSlider({info}) {\r\n  const display_event = info.filter((element) => element.display === 1);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const slideRef = useRef(null);\r\n  const TOTAL_SLIDES = display_event.length;\r\n\r\n\r\n  // Next 버튼 클릭 시\r\n  const NextSlide = () => {\r\n    if (currentSlide >= TOTAL_SLIDES-1) {\r\n      // 더 이상 넘어갈 슬라이드가 없으면\r\n      setCurrentSlide(0); // 1번째 사진으로 넘어갑니다.\r\n    } else {\r\n      setCurrentSlide(currentSlide + 1);\r\n    }\r\n  };\r\n  // Prev 버튼 클릭 시\r\n  const PrevSlide = () => {\r\n    if (currentSlide === 0) {\r\n      setCurrentSlide(TOTAL_SLIDES - 1); // 마지막 사진으로 넘어갑니다.\r\n    } else {\r\n      setCurrentSlide(currentSlide - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\r\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; // 백틱을 사용하여 슬라이드로 이동하는 에니메이션을 만듭니다.\r\n  }, [currentSlide]);\r\n  return (\r\n    <div className=\"slide_main_container event\">\r\n      <div className=\"slide_container\" ref={slideRef}>\r\n        {display_event.map((element) => (\r\n          <img className=\"slide_event_img\" src={element.image} key={element.uid}/>\r\n        ))}\r\n      </div>\r\n      <div className=\"slide_btns\">\r\n        <button className=\"btn_event left\" onClick={PrevSlide}>◀</button>\r\n        <button className=\"btn_event right\" onClick={NextSlide}>▶</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport \"components/css/Slider.css\";\r\n\r\nexport default function BannerSlider({info}) {\r\n  const display_event = info.filter((element) => element.display === 1);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const slideRef = useRef(null);\r\n  const TOTAL_SLIDES = display_event.length;\r\n\r\n  // Next 버튼 클릭 시\r\n  const NextSlide = () => {\r\n    if (currentSlide >= TOTAL_SLIDES - 1) {\r\n      setCurrentSlide(0);\r\n    } else {\r\n      setCurrentSlide(currentSlide + 1);\r\n    }\r\n  };\r\n  // Prev 버튼 클릭 시\r\n  const PrevSlide = () => {\r\n    if (currentSlide === 0) {\r\n      setCurrentSlide(TOTAL_SLIDES - 1);\r\n    } else {\r\n      setCurrentSlide(currentSlide - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    slideRef.current.style.transition = 'all 0.5s ease-in-out';\r\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; // 백틱을 사용하여 슬라이드로 이동하는 에니메이션을 만듭니다.\r\n  }, [currentSlide]);\r\n\r\n  return (\r\n    <div className=\"slide_main_container banner\">\r\n      <div className=\"slide_container\" ref={slideRef}>\r\n        {display_event.map((element) => (\r\n          <a className=\"slide_webtoon_link\" href={element.url} key={element.uid}>\r\n            <img className=\"slide_banner_img\" src={element.image}/>\r\n            <div className=\"slide_info\">\r\n              <div className=\"slide_webtoon_title\">{element.main_copy2}</div>\r\n              <div className=\"slide_description\">{element.sub_copy2}</div>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n      <div className=\"slide_btns\">\r\n        <button className=\"btn_banner left\" onClick={PrevSlide}>◀</button>\r\n        <button className=\"btn_banner right\" onClick={NextSlide}>▶</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import EventSlider from \"components/Slider/EventSlider\";\r\nimport BannerSlider from \"components/Slider/BannerSlider\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"components/css/Home.css\";\r\nimport ResultWebtoon from \"components/Weekly/ResultWebtoon\";\r\n\r\nconst Home = ({ webtoons, banner, events }) => {\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"home_container\">\r\n                <h2 className=\"home_title\">추천 웹툰</h2>\r\n                <BannerSlider info={banner} />\r\n            </div>\r\n            <div className=\"home_container\">\r\n                <div className=\"home_main_title\">\r\n                    <h2 className=\"home_title\">메인 이벤트</h2>\r\n                    <Link to=\"/event\" style={{ textDecoration: \"none\"}}><h4 className=\"home_more\">더보기 (More)</h4></Link>\r\n                </div>\r\n                <EventSlider info={events} />\r\n            </div>\r\n            <div className=\"home_container\">\r\n                <h2 className=\"home_title\">오늘의 웹툰</h2>\r\n                <TodayWebtoon webtoons={webtoons}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TodayWebtoon = ({ webtoons }) => {\r\n    \r\n    let weekWebtoon;\r\n    const todayNum = new Date().getDay();\r\n    switch (todayNum) {\r\n        case (0): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"일\"); break; }\r\n        case (1): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"월\"); break; }\r\n        case (2): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"화\"); break; }\r\n        case (3): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"수\"); break; }\r\n        case (4): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"목\"); break; }\r\n        case (5): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"금\"); break; }\r\n        case (6): { weekWebtoon = webtoons.filter((webtoon) => (webtoon.finished === 0))\r\n            .filter((element) => element.pubperiod === \"토\"); break; }\r\n    }\r\n\r\n    const weekWebtoonCount = weekWebtoon.length;\r\n\r\n    for (let i = 1; i < 5; i++) {\r\n        if (weekWebtoonCount % 5 === i) {\r\n            for (let j = i; j < 5; j++) {\r\n                weekWebtoon.push({\r\n                    \"series_id\": j,\r\n                    \"title\": \"\",\r\n                    \"image\": \"\",\r\n                    \"read_count\": 0,\r\n                    \"url\": \"\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"home_weekly_container\">\r\n            {weekWebtoon.map((webtoon) => (\r\n                <ResultWebtoon\r\n                    key={webtoon.series_id}\r\n                    url={webtoon.url}\r\n                    image={webtoon.image}\r\n                    title={webtoon.title}\r\n                    reader={webtoon.read_count}\r\n                />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/css/MyPage.css\";\r\nimport { dbService, authService } from \"fbase\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"components/css/MyPage.css\";\r\n\r\nconst MyPage = ({ userObj }) => {\r\n\tconst history = useHistory();\r\n\tconst [myWebtoon, setMyWebtoon] = useState([]);\r\n\tconst [test, setTest] = useState([]);\r\n\tvar newArr=[];\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tonCreate();\r\n\t},[])\r\n\r\n\tconst onCreate = async() => {\r\n\t\tawait dbService.collection(\"webtoon\")\r\n\t\t.get().then((querySnapshot) => {\r\n\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\tif(doc.data().userId === userObj.uid) {\r\n\t\t\t\t\tnewArr.push({\r\n\t\t\t\t\t\tkey : doc.data().webtoonId,\r\n\t\t\t\t\t\turl : doc.data().url,\r\n\t\t\t\t\t\timage: doc.data().image,\r\n\t\t\t\t\t\ttitle: doc.data().title, \r\n\t\t\t\t\t\treader: doc.data().reader, \r\n\t\t\t\t\t\tcategory: doc.data().category, \r\n\t\t\t\t\t\tauthor: doc.data().author, \r\n\t\t\t\t\t\tweekday: doc.data().weekday\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetMyWebtoon(newArr);\r\n\t\t\t\t\t// 아래 코드는 의미없는 코드.. 원인을 모르겠음.\r\n\t\t\t\t\tsetTest(test.concat({\r\n\t\t\t\t\t\tkey : doc.data().webtoonId,\r\n\t\t\t\t\t\turl : doc.data().url,\r\n\t\t\t\t\t\timage: doc.data().image,\r\n\t\t\t\t\t\ttitle: doc.data().title, \r\n\t\t\t\t\t\treader: doc.data().reader, \r\n\t\t\t\t\t\tcategory: doc.data().category, \r\n\t\t\t\t\t\tauthor: doc.data().author, \r\n\t\t\t\t\t\tweekday: doc.data().weekday\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tconst onClickLogOut = () => {\r\n\t\tauthService.signOut();\r\n\t\thistory.push(\"/\");\r\n\t\twindow.alert(\"로그아웃 되었습니다.\");\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    <div className=\"mypage_container\">\r\n\t    <div className=\"account_title\">로그인한 계정</div>\r\n\t\t\t<div className=\"account_container\">\r\n\t\t\t\t<img className=\"account_img\" src={userObj._delegate.photoURL} />\r\n\t\t\t\t<div className=\"account_info\">\r\n\t\t\t\t\t<div className=\"account_des\">이름 : {userObj._delegate.displayName}</div>\r\n\t\t\t\t\t<div className=\"account_des\">메일 : {userObj._delegate.email}</div>\r\n\t\t\t\t\t<button className=\"account_logBtn\" onClick={onClickLogOut}>로그아웃</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    </div>\r\n\t\t<div className=\"mypage_container\">\r\n\t\t\t<div className=\"fav_title\">즐겨찾기한 웹툰</div>\r\n\t\t\t{myWebtoon.map((webtoon) => (\r\n\t\t\t\t<FavWebtoon\r\n\t\t\t\t\tkey={webtoon.key}\r\n\t\t\t\t\twebtoon = {webtoon}\r\n\t\t\t\t/>)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t</>\r\n  )\r\n}\r\n\r\nconst FavWebtoon = ({webtoon}) => {\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n        <a className=\"fav_info_container\" href={webtoon.url}>\r\n          <img className=\"fav_image\" src={webtoon.image} />\r\n          <div className=\"fav_info_main\">\r\n            <h2 className=\"fav_info_title\">{webtoon.title}</h2>\r\n            <div className=\"fav_info_sub\">\r\n              <FontAwesomeIcon className=\"user_icon\" icon={faUser} />\r\n              {`${((webtoon.reader) / 10000).toFixed(1)}만명 | ${webtoon.category} | ${webtoon.author}`}\r\n            </div>\r\n            <div className=\"fav_info_sub\">\r\n              {`연재 요일 / ${webtoon.weekday}`}\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </>\r\n\t)\r\n}\r\n\r\nexport default MyPage;","import { MdSearch } from \"react-icons/md\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/css/Navigation.css\";\r\n\r\nconst Search = () => {\r\n    const [term, setTerm] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setTerm(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (term === \"\") {\r\n            window.alert(\"검색어를 입력해주세요.\");\r\n        } else {\r\n            history.push(`/search=${term}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"search_bar_input\" onSubmit={onSubmit}>\r\n            <input\r\n                className=\"search_bar\"\r\n                type=\"text\"\r\n                value={term}\r\n                placeholder=\"제목/작가\"\r\n                onChange={onChange}\r\n            />\r\n            <MdSearch\r\n                className=\"search_icon\"\r\n                onClick={onSubmit}\r\n                color={\"rgb(119, 118, 118)\"}\r\n                size=\"30\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;","import Search from \"routes/Search\";\r\nimport { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport \"components/css/Navigation.css\"\r\n\r\nconst Navigation = ({ isLoggedIn, webtoons }) => {\r\n    const history = useHistory();\r\n\r\n    const onClick = () => {\r\n        if (isLoggedIn) {\r\n            history.push(\"/mypage\")\r\n        } else {\r\n            const check = window.confirm(\"로그인 후 사용가능합니다.\\n로그인 페이지로 이동하시겠습니까?\");\r\n\r\n            if (check) {\r\n                history.push(\"/auth\");\r\n            } else {\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const onClickLogOut = () => {\r\n        authService.signOut();\r\n        window.alert(\"로그아웃 되었습니다.\");\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav_container\">\r\n                <div className=\"nav_header\">\r\n                    <Link to=\"/\">\r\n                        <img className=\"nav_logo\" src={process.env.PUBLIC_URL + \"/main logo.png\"} />\r\n                    </Link>\r\n                    <Search webtoons={webtoons} />\r\n                    <div className=\"nav_logBtns\">\r\n                        {isLoggedIn ? (\r\n                            <button className=\"nav_logBtn\" onClick={onClickLogOut}>로그아웃</button>\r\n                        ) : (\r\n                            <Link to=\"/auth\">\r\n                                <button className=\"nav_logBtn\" type=\"button\">로그인</button>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav_mainNav\">\r\n                    <li className={(useLocation().pathname === \"/\") ? \"nav active\" : \"nav\"}>\r\n                        <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                            홈\r\n                        </Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"/weekly\")) ? \"nav active\" : \"nav\"}>\r\n                        <Link to=\"/weekly\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                            연재\r\n                        </Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname === \"/finish\") ? \"nav active\" : \"nav\"}>\r\n                        <Link to=\"/finish\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                            완결\r\n                        </Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname.includes(\"/top\")) ? \"nav active\" : \"nav\"}>\r\n                        <Link to=\"/top\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                            TOP\r\n                        </Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname === \"/event\") ? \"nav active\" : \"nav\"}>\r\n                        <Link to=\"/event\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                            이벤트\r\n                        </Link>\r\n                    </li>\r\n                    <li className={(useLocation().pathname === \"/mypage\") ? \"nav active\" : \"nav\"} onClick={onClick} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                        마이페이지\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/css/Auth.css\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const data = await authService.signInWithEmailAndPassword(\r\n                email,\r\n                password\r\n            );\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name }\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n        exit();\r\n    };\r\n\r\n    const onAuth = () => {\r\n        history.push(\"/auth/signup\");\r\n    }\r\n\r\n    const exit = () => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth_container\">\r\n            <div className=\"auth_layout\">\r\n                <form className=\"log_form\" onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"input_form\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        placeholder=\"이메일\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        className=\"input_form\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        placeholder=\"비밀번호\"\r\n                        required\r\n                    />\r\n                    <span className = \"auth_Error\">\r\n                        {error}\r\n                    </span>\r\n                    <input\r\n                        className=\"auth_btn\"\r\n                        type=\"submit\"\r\n                        value=\"로그인\"\r\n                        onClick={exit}\r\n                    />\r\n                    <input\r\n                        className=\"go_sign_btn\"\r\n                        type=\"submit\"\r\n                        style={{ textDecoration: \"none\", color: \"black\" }} value=\"회원가입\"\r\n                        onClick={onAuth}\r\n                    />\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"social_btns\">\r\n                <button className=\"social_btn\" onClick={onSocialClick} name=\"google\">\r\n                <FontAwesomeIcon icon={faGoogle} /> 구글 로그인\r\n                </button>\r\n                <button className=\"social_btn\" onClick={onSocialClick} name=\"github\">\r\n                <FontAwesomeIcon icon={faGithub} /> 깃허브 로그인\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"components/css/Auth.css\"\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const data = await authService.createUserWithEmailAndPassword(\r\n                email,\r\n                password\r\n            );\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const exit = () => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                history.push(\"/\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign_container\">\r\n            <div className=\"sign_layout\">\r\n                <form className=\"sign_form\" onSubmit={onSubmit}>\r\n                    <input className=\"input_form\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        placeholder=\"이메일\"\r\n                        required\r\n                    />\r\n                    <input className=\"input_form\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        placeholder=\"비밀번호\"\r\n                        required\r\n                    />\r\n                    <span className=\"auth_Error\">\r\n                        {error}\r\n                    </span>\r\n                    <input\r\n                        className=\"auth_Btn\"\r\n                        type=\"submit\"\r\n                        value=\"회원가입\"\r\n                        onClick={exit}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Search.css\";\r\n\r\nconst ResultTitle = ({ url, image, title, reader, category, author, weekday, finished }) => {\r\n    let pubperiod = \"완결\";\r\n\r\n    if (finished === 0) {\r\n        pubperiod = `${weekday} 연재`;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a className=\"search_info\" href={url}>\r\n                <img className=\"search_image\" src={image} />\r\n                <div className=\"search_info_main\">\r\n                    <h3 className=\"search_info_title\">{title}</h3>\r\n                    <div className=\"search_info_sub\">\r\n                        <FontAwesomeIcon className=\"user_icon\" icon={faUser} />\r\n                        {`${((reader) / 10000).toFixed(1)}만명 | ${category} | ${author}`}\r\n                    </div>\r\n                    <div className=\"search_info_day\">\r\n                        {pubperiod}\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultTitle;","import { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"components/css/Search.css\";\r\n\r\nconst ResultAuthor = ({ url, image, title, reader, category, author, weekday, finished }) => {\r\n    let pubperiod = \"완결\";\r\n\r\n    if (finished === 0) {\r\n        pubperiod = `${weekday} 연재`;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a className=\"search_info\" href={url}>\r\n                <img className=\"search_image\" src={image} />\r\n                <div className=\"search_info_main\">\r\n                    <h3 className=\"search_info_title\">{title}</h3>\r\n                    <div className=\"search_info_sub\">\r\n                        <FontAwesomeIcon className=\"user_icon\" icon={faUser} />\r\n                        {`${((reader) / 10000).toFixed(1)}만명 | ${category} | ${author}`}\r\n                    </div>\r\n                    <div className=\"search_info_day\">\r\n                        {pubperiod}\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultAuthor;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"components/css/Search.css\";\r\nimport ResultTitle from \"./ResultTitle\";\r\nimport ResultAuthor from \"./ResultAuthor\";\r\n\r\nconst SearchWebtoon = ({ webtoons }) => {\r\n    const { term } = useParams();\r\n    let searchTitle = [];\r\n    let searchAuthor = [];\r\n\r\n    const compare = () => {\r\n        searchTitle.length = 0;\r\n        searchAuthor.length = 0;\r\n        const searchTerm = term.replace(/(\\s*)/g, \"\");\r\n\r\n        searchTitle = webtoons.filter((element) => (element.title.replace(/(\\s*)/g, \"\").includes(searchTerm)))\r\n        searchAuthor = webtoons.filter((element) => (element.author.replace(/(\\s*)/g, \"\").includes(searchTerm)))\r\n    }\r\n\r\n    return (\r\n        <div className=\"search_container\">\r\n            {compare()}\r\n            <h2>{`${term}(으)로 검색한 결과입니다.`}</h2>\r\n            <hr color = \"#bdbdbd\" width=\"100%\" size=\"2px\" />\r\n            <h3 className=\"search_count\">\r\n                {`제목 (${searchTitle.length}건)`}\r\n            </h3>\r\n            {searchTitle.map((webtoon) => (\r\n                <ResultTitle\r\n                    key={webtoon.series_id}\r\n                    url={webtoon.url}\r\n                    image={webtoon.thumb_img}\r\n                    title={webtoon.title}\r\n                    reader={webtoon.read_count}\r\n                    category={webtoon.sub_category_title}\r\n                    author={webtoon.author}\r\n                    weekday={webtoon.pubperiod}\r\n                    finished={webtoons.finished}\r\n                />\r\n            ))}\r\n            <h3 className=\"search_count\">\r\n                {`작가 (${searchAuthor.length}건)`}\r\n            </h3>\r\n            {searchAuthor.map((webtoon) => (\r\n                <ResultAuthor\r\n                    key={webtoon.series_id}\r\n                    url={webtoon.url}\r\n                    image={webtoon.thumb_img}\r\n                    title={webtoon.title}\r\n                    reader={webtoon.read_count}\r\n                    category={webtoon.sub_category_title}\r\n                    author={webtoon.author}\r\n                    weekday={webtoon.pubperiod}\r\n                    finished={webtoons.finished}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchWebtoon;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Event from \"routes/Event\";\r\nimport Finish from \"routes/Finish\";\r\nimport Home from \"routes/Home\";\r\nimport MyPage from \"routes/MyPage\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Auth from \"routes/Auth\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport SearchWebtoon from \"./Search/SearchWebtoon\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, webtoons, banner, events }) => {\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navigation\r\n                    userObj={userObj}\r\n                    isLoggedIn={isLoggedIn}\r\n                    webtoons={webtoons}\r\n                />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home\r\n                            useObj={userObj}\r\n                            webtoons={webtoons}\r\n                            banner={banner}\r\n                            events={events}\r\n                            isLoggedIn={isLoggedIn}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/finish\">\r\n                        <Finish\r\n                            webtoons={webtoons}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/event\">\r\n                        <Event\r\n                            events={events}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/mypage\">\r\n                        <MyPage\r\n                            userObj={userObj}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\">\r\n                        <Auth\r\n                            isLoggedIn={isLoggedIn}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/auth/signup\">\r\n                        <AuthForm\r\n                            isLoggedIn={isLoggedIn}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/search=:term\">\r\n                        <SearchWebtoon webtoons={webtoons}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AppRouter;\r\n","import axios from \"axios\";\r\nimport { authService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TopRouter from \"routes/Top\";\r\nimport WeeklyRouter from \"routes/Weekly\";\r\nimport AppRouter from \"./Router\";\r\n\r\n// mypage에서 userId랑 같은 부분만 즐겨찾기 웹툰으로 출력하도록 수정 필요\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    const [webtoons, setWebtoons] = useState([]);\r\n    const [banner, setBanner] = useState([]);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getWebtoons();\r\n        getBanner();\r\n        getEvents();\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj(user)\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n        })\r\n    }, []);\r\n\r\n    const getWebtoons = async () => {\r\n        const {\r\n            data : {list}\r\n        } = await axios.get(\"https://raw.githubusercontent.com/AAminha/webtoon/master/public/dummy/webtoon.json\");\r\n\r\n        setWebtoons (list);\r\n    };\r\n\r\n    const getBanner = async () => {\r\n        const {\r\n            data: { list }\r\n        } = await axios.get(\"https://raw.githubusercontent.com/AAminha/webtoon/master/public/dummy/webtoon_banner.json\");\r\n\r\n        setBanner(list);\r\n    };\r\n\r\n    const getEvents = async () => {\r\n        const {\r\n            data: { list }\r\n        } = await axios.get(\"https://raw.githubusercontent.com/AAminha/webtoon/master/public/dummy/event.json\");\r\n\r\n        setEvents(list);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {init ? (\r\n                <>\r\n                    <AppRouter\r\n                        isLoggedIn={Boolean(userObj)}\r\n                        userObj={userObj}\r\n                        webtoons={webtoons}\r\n                        banner={banner}\r\n                        events={events}\r\n                    />\r\n                    <WeeklyRouter\r\n                        webtoons={webtoons}\r\n                    />\r\n                    <TopRouter\r\n                        userObj={userObj}\r\n                        webtoons={webtoons}\r\n                    />\r\n                </>\r\n            ) : (\r\n                \"Initializing...\"\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}